#!/bin/bash

PARENT_DIRECORY="{{ postgresql_backup_path }}"
CURRENT_TIMESTAMP=$(date +"{{ postgresql_backup_formatting }}")
BACKUP_RETENTION="{{ postgresql_backup_retention }}"
BACKUP_DIRECTORY="${PARENT_DIRECORY}/${CURRENT_TIMESTAMP}"

if [ ! -d ${BACKUP_DIRECTORY} ]; then
    mkdir -p ${BACKUP_DIRECTORY}
    chmod u=rwx,g=rwx,o= ${BACKUP_DIRECTORY}
fi

find ${PARENT_DIRECORY} \
    -mindepth 1 \
    -maxdepth 1 \
    -type d \
    -ctime ${BACKUP_RETENTION} \
    -exec rm -rf {} \;

DATABASES=$(cd /tmp && su -c "psql -w -A -t -c 'SELECT datname FROM pg_database'" postgres | grep -v -E "{{ postgresql_backup_ignore }}")

if [ "${DATABASES}" == "" ]; then
    echo "Found no databases..."
    exit
fi

echo "Starting backup for postgres..."
START=$(date +%s)
cd /tmp && su -c "pg_dump -w --dbname=postgres" postgres | gzip > "${BACKUP_DIRECTORY}/postgres.sql.gz"
ENDS=$(date +%s)
echo "Done within $((${ENDS}-${START}))s"

for DATABASE in ${DATABASES}
do
    echo "Starting backup for ${DATABASE}..."
    START=$(date +%s)
    cd /tmp && su -c "pg_dump -w --dbname=${DATABASE}" postgres | gzip > "${BACKUP_DIRECTORY}/${DATABASE}.sql.gz"
    ENDS=$(date +%s)
    echo "Done within $((${ENDS}-${START}))s"
done
{% if postgresql_backup_addition_script | default(False) %}

echo "Executing additional scripts..."
START=$(date +%s)
{{ postgresql_backup_addition_script | trim }}
ENDS=$(date +%s)
echo "Done within $((${ENDS}-${START}))s"
{% endif %}
